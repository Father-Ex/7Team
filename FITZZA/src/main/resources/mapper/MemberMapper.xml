<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.team.fitzza.dao.MemberDAO">
  	<select id="loginCheck" resultType="MemberVO">
  		SELECT user_id, user_nickname FROM user
  		WHERE user_id=#{user_id} AND user_pwd=#{user_pwd}
 	</select>
 	<!-- 회원등록 -->
 	<insert id="memberInsert">
 		INSERT INTO user(user_name, user_id, user_pwd, user_nickname, tel, email, profile_image)
		VALUES(#{user_name}, #{user_id}, #{user_pwd}, #{user_nickname}, #{tel}, #{email}, '/upload/profileDefault.png')
 	</insert>
 	
 	<!-- 회원정보 수정 -->
 	<select id="memberSelect" resultType="com.team.fitzza.vo.MemberVO">
		SELECT user_id, user_name, user_nickname, tel, email FROM user
		WHERE user_id = #{param1}
	</select>
	<update id="memberUpdate">
		UPDATE user SET user_pwd=#{user_pwd}, user_nickname=#{user_nickname}, 
		tel=#{tel} WHERE user_id=#{user_id}
	</update>
	<select id="pwdCheck" resultType="MemberVO">
  		SELECT user_id, user_pwd FROM user
  		WHERE user_id=#{user_id}
 	</select>
 	<!-- 프로필 사진 바꾸기 -->
 	<select id="getFileName" resultType="com.team.fitzza.vo.MemberVO">
    	SELECT profile_image FROM user 
    	WHERE user_id=#{user_id}
    </select>
 	<update id="changeProfileImg">
 		UPDATE user SET profile_image=#{profile_image} WHERE user_id=#{user_id}
 	</update>
 	
 	<!-- 회원탈퇴 -->
 	<insert id="selfBye">
 		INSERT INTO user_leave(leave_forced, email, user_id) VALUES('N',#{email},#{user_id})
 	</insert>
 	<delete id="memberBye">
 		DELETE FROM user WHERE user_id=#{user_id} AND user_pwd=#{user_pwd}
 	</delete>
	<select id="idCheck" resultType="int">
		SELECT COUNT(user_id) CNT FROM user WHERE user_id=#{param1}
	</select>
	<select id="nickCheck" resultType="int">
		SELECT COUNT(user_nickname) CNT FROM user WHERE user_nickname=#{param1}
	</select>
	
	<!-- 마이페이지 -->
	<select id="myPage" resultType="MemberVO">
		SELECT  A.user_id, A.user_nickname, A.report_hit, A.exp, A.profile_image,
				B.grade, B.frame_img
		FROM 	user A, user_grade B
		WHERE   A.user_id=#{param1}
		AND 	B.exp_min <![CDATA[<=]]> A.exp
		AND 	A.exp <![CDATA[<=]]> B.exp_max
	</select>
	
	<!-- 회원 EXP -->
 	<update id='expUp_board'>
 		update user set exp=exp+10 where user_id=#{param1};
 	</update>
 	<update id='expUp_reply'>
 		update user set exp=exp+3 where user_id=#{param1};
 	</update>
 	<update id='expDown_board'>
 		update user set exp=exp-10 where user_id=#{param1};
 	</update>
 	<update id='expDown_reply'>
 		update user set exp=exp-3 where user_id=#{param1};
 	</update>
  </mapper>